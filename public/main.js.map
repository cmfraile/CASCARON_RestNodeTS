{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/servicios/httpservice.service.ts","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { HttpserviceService } from './servicios/httpservice.service';\nimport { usuario } from './servicios/httpservice.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  \n  title = 'apptest';\n\n  data!:usuario[]|undefined;\n\n  constructor( private _http:HttpserviceService ){\n    this._http.dataobs$.subscribe(resp => this.data = resp);\n  }\n  \n}\n\n\n","<h1>La aplicacion front esta implantada satisfactoriamente</h1>\n\n<div class=\"container\">\n  <table class=\"table\" *ngIf=\"data !== undefined\" >\n    <thead>\n      <tr>\n        <th scope=\"col\">Nº</th>\n        <th scope=\"col\">Foto</th>\n        <th scope=\"col\">Nombre</th>\n        <th scope=\"col\">Descripción</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let dato of data; let i = index\" >\n        <th scope=\"row\">{{i}}</th>\n        <td><img src=\"{{dato.foto}}\" alt=\"\" width=\"50\"></td>\n        <td>{{dato.nombre}}</td>\n        <td>{{dato.descripcion}}</td>\n      </tr>\n    </tbody>\n  </table>\n  <p *ngIf=\"data == undefined\" class=\"alerta\"> No se logra recibir la información </p>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpserviceService {\n\n  dataobs$:Observable<usuario[]> = this.http.get<usuario[]>('http://localhost:8000/api/pruebas/arraypruebas')\n  \n  constructor( private http:HttpClient ){}\n\n}\n\nexport interface usuario {nombre:string , foto:string , descripcion:string};\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}